Haxe File
  PsiJavaToken:CONDITIONAL_STATEMENT_ID('#if flash8')
  PsiJavaToken:MSL_COMMENT('// Haxe code specific for flash player 8')
  PsiJavaToken:CONDITIONAL_STATEMENT_ID('#elseif flash')
  PsiJavaToken:MSL_COMMENT('// Haxe code specific for flash platform (any version)')
  PsiJavaToken:CONDITIONAL_STATEMENT_ID('#elseif js')
  PsiJavaToken:MSL_COMMENT('// Haxe code specific for javascript plaform')
  PsiJavaToken:#else('#else')
  PsiJavaToken:MSL_COMMENT('// do something else')
  PsiJavaToken:#error('#error // will display an error "Not implemented on this platform"\n  #error "Custom error message" ')
  PsiJavaToken:MSL_COMMENT('// will display an error "Custom error message"')
  PsiJavaToken:#end('#end')
  PsiJavaToken:CONDITIONAL_STATEMENT_ID('#if mydebug')
  CLASS_DECLARATION
    PsiElement(class)('class')
    COMPONENT_NAME
      IDENTIFIER
        PsiElement(ID)('Crazy')
    PsiElement({)('{')
    PsiComment(#else)('#else\n  interface Crazy {\n  #end')
    PsiComment(MSL_COMMENT)('// yep')
    CLASS_BODY
      <empty list>
    PsiElement(})('}')
  CLASS_DECLARATION
    PsiElement(class)('class')
    COMPONENT_NAME
      IDENTIFIER
        PsiElement(ID)('ConditionalCompilation')
    PsiElement({)('{')
    PsiComment(#if)('#if')
    PsiComment(PPEXPRESSION)(' !debug ')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        DECLARATION_ATTRIBUTE
          PsiElement(inline)('inline')
        PsiComment(#end)('#end')
        DECLARATION_ATTRIBUTE
          ACCESS
            PsiElement(public)('public')
        PsiElement(function)('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiElement(ID)('abc')
        PsiElement(()('(')
        PsiElement())(')')
        BLOCK_STATEMENT
          PsiElement({)('{')
          PsiElement(})('}')
    PsiElement(})('}')
  PsiComment(#if)('#if')
  PsiComment(PPEXPRESSION)(' (neko && mydebug)\n')
  CLASS_DECLARATION
    PsiElement(class)('class')
    COMPONENT_NAME
      IDENTIFIER
        PsiElement(ID)('FooNeko')
    PsiElement({)('{')
    CLASS_BODY
      <empty list>
    PsiElement(})('}')
  PsiComment(MSL_COMMENT)('// Only for "mydebug" mode on Neko')
  PsiComment(#end)('#end')
  PsiComment(#if)('#if')
  PsiComment(PPEXPRESSION)(' (flash || php)\n')
  PsiComment(PPBODY)('// Code that works for either flash or PHP\nclass FooFlash {\n\n}\n#end')
  PsiComment(#if)('#if')
  PsiComment(PPEXPRESSION)(' (neko && mydebug)\n')
  TYPEDEF_DECLARATION
    PsiElement(typedef)('typedef')
    COMPONENT_NAME
      IDENTIFIER
        PsiElement(ID)('Vector')
    PsiElement(=)('=')
    TYPE_OR_ANONYMOUS
      TYPE
        REFERENCE_EXPRESSION
          REFERENCE_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                PsiElement(ID)('com')
            PsiElement(.)('.')
            REFERENCE_EXPRESSION
              IDENTIFIER
                PsiElement(ID)('foo')
          PsiElement(.)('.')
          REFERENCE_EXPRESSION
            IDENTIFIER
              PsiElement(ID)('SuperArray')
    PsiElement(;)(';')
  PsiComment(MSL_COMMENT)('// Only for "mydebug" mode on Neko')
  PsiComment(#end)('#end')
  CLASS_DECLARATION
    PsiElement(class)('class')
    COMPONENT_NAME
      IDENTIFIER
        PsiElement(ID)('ConditionalCompilation')
    PsiElement({)('{')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        PsiElement(function)('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiElement(ID)('foo')
        PsiElement(()('(')
        PsiElement())(')')
        BLOCK_STATEMENT
          PsiElement({)('{')
          PsiComment(#if)('#if')
          PsiComment(PPEXPRESSION)(' (neko && php) || (neko && mydebug)\n    ')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                PsiElement(ID)('trace')
            PsiElement(()('(')
            EXPRESSION_LIST
              STRING_LITERAL_EXPRESSION
                PsiElement(OPEN_QUOTE)('"')
                PsiElement(REGULAR_STRING_PART)('Debug infos for all debug compiles')
                PsiElement(CLOSING_QUOTE)('"')
            PsiElement())(')')
          PsiElement(;)(';')
          PsiComment(#end)('#end')
          PsiElement(})('}')
    PsiElement(})('}')