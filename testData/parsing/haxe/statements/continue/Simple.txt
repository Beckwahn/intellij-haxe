Haxe File
  CLASS_DECLARATION
    PsiJavaToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        PsiJavaToken:ID('Simple')
    PsiJavaToken:{('{')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        PsiJavaToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('foo')
        PsiJavaToken:(('(')
        PARAMETER_LIST
          <empty list>
        PsiJavaToken:)(')')
        BLOCK_STATEMENT
          PsiJavaToken:{('{')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('i')
              VAR_INIT
                PsiJavaToken:=('=')
                LITERAL_EXPRESSION
                  PsiJavaToken:LITINT('0')
            PsiJavaToken:;(';')
          WHILE_STATEMENT
            PsiJavaToken:while('while')
            PsiJavaToken:(('(')
            COMPARE_EXPRESSION
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('i')
              COMPARE_OPERATION
                PsiJavaToken:<('<')
              LITERAL_EXPRESSION
                PsiJavaToken:LITINT('10')
            PsiJavaToken:)(')')
            BLOCK_STATEMENT
              PsiJavaToken:{('{')
              PREFIX_EXPRESSION
                PsiJavaToken:++('++')
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('i')
              PsiJavaToken:;(';')
              IF_STATEMENT
                PsiJavaToken:if('if')
                PsiJavaToken:(('(')
                COMPARE_EXPRESSION
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('i')
                  COMPARE_OPERATION
                    PsiJavaToken:<('<')
                  LITERAL_EXPRESSION
                    PsiJavaToken:LITINT('5')
                PsiJavaToken:)(')')
                CONTINUE_STATEMENT
                  PsiJavaToken:continue('continue')
                  PsiJavaToken:;(';')
              PREFIX_EXPRESSION
                PsiJavaToken:++('++')
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('i')
              PsiJavaToken:;(';')
              PsiJavaToken:}('}')
          PsiJavaToken:}('}')
    PsiJavaToken:}('}')