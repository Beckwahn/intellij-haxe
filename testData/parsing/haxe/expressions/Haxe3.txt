Haxe File
  IMPORT_STATEMENT_REGULAR
    PsiJavaToken:import('import')
    REFERENCE_EXPRESSION
      REFERENCE_EXPRESSION
        REFERENCE_EXPRESSION
          IDENTIFIER
            PsiJavaToken:ID('haxe')
        PsiJavaToken:.('.')
        REFERENCE_EXPRESSION
          IDENTIFIER
            PsiJavaToken:ID('macro')
      PsiJavaToken:.('.')
      REFERENCE_EXPRESSION
        IDENTIFIER
          PsiJavaToken:ID('Expr')
    PsiJavaToken:;(';')
  ENUM_DECLARATION
    PsiJavaToken:enum('enum')
    COMPONENT_NAME
      IDENTIFIER
        PsiJavaToken:ID('Tree')
    GENERIC_PARAM
      PsiJavaToken:<('<')
      GENERIC_LIST_PART
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('T')
      PsiJavaToken:>('>')
    PsiJavaToken:{('{')
    ENUM_BODY
      ENUM_VALUE_DECLARATION
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('Leaf')
        ENUM_CONSTRUCTOR_PARAMETERS
          PsiJavaToken:(('(')
          PARAMETER_LIST
            PARAMETER
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('v')
              TYPE_TAG
                PsiJavaToken::(':')
                TYPE_OR_ANONYMOUS
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        PsiJavaToken:ID('T')
          PsiJavaToken:)(')')
        PsiJavaToken:;(';')
      ENUM_VALUE_DECLARATION
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('Node')
        ENUM_CONSTRUCTOR_PARAMETERS
          PsiJavaToken:(('(')
          PARAMETER_LIST
            PARAMETER
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('l')
              TYPE_TAG
                PsiJavaToken::(':')
                TYPE_OR_ANONYMOUS
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        PsiJavaToken:ID('Tree')
                    TYPE_PARAM
                      PsiJavaToken:<('<')
                      TYPE_LIST
                        TYPE_LIST_PART
                          TYPE_OR_ANONYMOUS
                            TYPE
                              REFERENCE_EXPRESSION
                                IDENTIFIER
                                  PsiJavaToken:ID('T')
                      PsiJavaToken:>('>')
            PsiJavaToken:,(',')
            PARAMETER
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('r')
              TYPE_TAG
                PsiJavaToken::(':')
                TYPE_OR_ANONYMOUS
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        PsiJavaToken:ID('Tree')
                    TYPE_PARAM
                      PsiJavaToken:<('<')
                      TYPE_LIST
                        TYPE_LIST_PART
                          TYPE_OR_ANONYMOUS
                            TYPE
                              REFERENCE_EXPRESSION
                                IDENTIFIER
                                  PsiJavaToken:ID('T')
                      PsiJavaToken:>('>')
          PsiJavaToken:)(')')
        PsiJavaToken:;(';')
    PsiJavaToken:}('}')
  CLASS_DECLARATION
    PsiJavaToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        PsiJavaToken:ID('Test')
    PsiJavaToken:{('{')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        PsiJavaToken:@:macro('@:macro')
        DECLARATION_ATTRIBUTE
          ACCESS
            PsiJavaToken:public('public')
        DECLARATION_ATTRIBUTE
          PsiJavaToken:static('static')
        PsiJavaToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('repeat')
        PsiJavaToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                PsiJavaToken:ID('cond')
            TYPE_TAG
              PsiJavaToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('Expr')
          PsiJavaToken:,(',')
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                PsiJavaToken:ID('e')
            TYPE_TAG
              PsiJavaToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('Expr')
        PsiJavaToken:)(')')
        TYPE_TAG
          PsiJavaToken::(':')
          TYPE_OR_ANONYMOUS
            TYPE
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('Expr')
        BLOCK_STATEMENT
          PsiJavaToken:{('{')
          RETURN_STATEMENT
            PsiJavaToken:return('return')
          PsiJavaToken:macro('macro ')
          WHILE_STATEMENT
            PsiJavaToken:while('while')
            PsiJavaToken:(('(')
            REFERENCE_EXPRESSION
              IDENTIFIER
                PsiJavaToken:ID('$cond')
            PsiJavaToken:)(')')
            CALL_EXPRESSION
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('trace')
              PsiJavaToken:(('(')
              EXPRESSION_LIST
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('$e')
              PsiJavaToken:)(')')
            PsiJavaToken:;(';')
          PsiJavaToken:}('}')
      VAR_DECLARATION
        META_META
          PsiJavaToken:@:meta('@:meta')
          PsiJavaToken:(('(')
          PsiJavaToken:ID('Inject')
          PsiJavaToken:(('(')
          PsiJavaToken:)(')')
          PsiJavaToken:)(')')
        DECLARATION_ATTRIBUTE
          ACCESS
            PsiJavaToken:private('private')
        PsiJavaToken:var('var')
        VAR_DECLARATION_PART
          COMPONENT_NAME
            IDENTIFIER
              PsiJavaToken:ID('s')
          TYPE_TAG
            PsiJavaToken::(':')
            TYPE_OR_ANONYMOUS
              TYPE
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('TextField')
        PsiJavaToken:;(';')
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        DECLARATION_ATTRIBUTE
          PsiJavaToken:static('static')
        PsiJavaToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('main')
        PsiJavaToken:(('(')
        PARAMETER_LIST
          <empty list>
        PsiJavaToken:)(')')
        BLOCK_STATEMENT
          PsiJavaToken:{('{')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('x')
              VAR_INIT
                PsiJavaToken:=('=')
                LITERAL_EXPRESSION
                  PsiJavaToken:LITINT('0')
            PsiJavaToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                PsiJavaToken:ID('repeat')
            PsiJavaToken:(('(')
            EXPRESSION_LIST
              COMPARE_EXPRESSION
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('x')
                COMPARE_OPERATION
                  PsiJavaToken:<('<')
                LITERAL_EXPRESSION
                  PsiJavaToken:LITINT('10')
              PsiJavaToken:,(',')
              SUFFIX_EXPRESSION
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('x')
                PsiJavaToken:++('++')
            PsiJavaToken:)(')')
          PsiJavaToken:;(';')
          PsiJavaToken:}('}')
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        PsiJavaToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('strings')
        PsiJavaToken:(('(')
        PARAMETER_LIST
          <empty list>
        PsiJavaToken:)(')')
        BLOCK_STATEMENT
          PsiJavaToken:{('{')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('name')
              VAR_INIT
                PsiJavaToken:=('=')
                STRING_LITERAL_EXPRESSION
                  PsiJavaToken:OPEN_QUOTE('"')
                  PsiJavaToken:REGULAR_STRING_PART('Haxe')
                  PsiJavaToken:CLOSING_QUOTE('"')
            PsiJavaToken:;(';')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('x')
              VAR_INIT
                PsiJavaToken:=('=')
                LITERAL_EXPRESSION
                  PsiJavaToken:LITINT('10')
            PsiJavaToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                PsiJavaToken:ID('trace')
            PsiJavaToken:(('(')
            EXPRESSION_LIST
              STRING_LITERAL_EXPRESSION
                PsiJavaToken:OPEN_QUOTE(''')
                SHORT_TEMPLATE_ENTRY
                  PsiJavaToken:SHORT_TEMPLATE_ENTRY_START('$')
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('name')
                PsiJavaToken:REGULAR_STRING_PART(' is ')
                SHORT_TEMPLATE_ENTRY
                  PsiJavaToken:SHORT_TEMPLATE_ENTRY_START('$')
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('x')
                PsiJavaToken:REGULAR_STRING_PART(' times better than X')
                PsiJavaToken:CLOSING_QUOTE(''')
            PsiJavaToken:)(')')
          PsiJavaToken:;(';')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                PsiJavaToken:ID('trace')
            PsiJavaToken:(('(')
            EXPRESSION_LIST
              STRING_LITERAL_EXPRESSION
                PsiJavaToken:OPEN_QUOTE(''')
                LONG_TEMPLATE_ENTRY
                  PsiJavaToken:LONG_TEMPLATE_ENTRY_START('${')
                  CALL_EXPRESSION
                    REFERENCE_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          PsiJavaToken:ID('name')
                      PsiJavaToken:.('.')
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          PsiJavaToken:ID('toUpperCase')
                    PsiJavaToken:(('(')
                    PsiJavaToken:)(')')
                  PsiJavaToken:LONG_TEMPLATE_ENTRY_END('}')
                PsiJavaToken:REGULAR_STRING_PART(' is ')
                LONG_TEMPLATE_ENTRY
                  PsiJavaToken:LONG_TEMPLATE_ENTRY_START('${')
                  MULTIPLICATIVE_EXPRESSION
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        PsiJavaToken:ID('x')
                    PsiJavaToken:*('*')
                    LITERAL_EXPRESSION
                      PsiJavaToken:LITINT('2')
                  PsiJavaToken:LONG_TEMPLATE_ENTRY_END('}')
                PsiJavaToken:REGULAR_STRING_PART(' times better than X')
                PsiJavaToken:CLOSING_QUOTE(''')
            PsiJavaToken:)(')')
          PsiJavaToken:;(';')
          PsiJavaToken:}('}')
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        PsiJavaToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('patternMatching')
        PsiJavaToken:(('(')
        PARAMETER_LIST
          <empty list>
        PsiJavaToken:)(')')
        BLOCK_STATEMENT
          PsiJavaToken:{('{')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('myTree')
              VAR_INIT
                PsiJavaToken:=('=')
                CALL_EXPRESSION
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('Node')
                  PsiJavaToken:(('(')
                  EXPRESSION_LIST
                    CALL_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          PsiJavaToken:ID('Leaf')
                      PsiJavaToken:(('(')
                      EXPRESSION_LIST
                        STRING_LITERAL_EXPRESSION
                          PsiJavaToken:OPEN_QUOTE('"')
                          PsiJavaToken:REGULAR_STRING_PART('foo')
                          PsiJavaToken:CLOSING_QUOTE('"')
                      PsiJavaToken:)(')')
                    PsiJavaToken:,(',')
                    CALL_EXPRESSION
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          PsiJavaToken:ID('Node')
                      PsiJavaToken:(('(')
                      EXPRESSION_LIST
                        CALL_EXPRESSION
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              PsiJavaToken:ID('Leaf')
                          PsiJavaToken:(('(')
                          EXPRESSION_LIST
                            STRING_LITERAL_EXPRESSION
                              PsiJavaToken:OPEN_QUOTE('"')
                              PsiJavaToken:REGULAR_STRING_PART('bar')
                              PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:)(')')
                        PsiJavaToken:,(',')
                        CALL_EXPRESSION
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              PsiJavaToken:ID('Leaf')
                          PsiJavaToken:(('(')
                          EXPRESSION_LIST
                            STRING_LITERAL_EXPRESSION
                              PsiJavaToken:OPEN_QUOTE('"')
                              PsiJavaToken:REGULAR_STRING_PART('foobar')
                              PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:)(')')
                      PsiJavaToken:)(')')
                  PsiJavaToken:)(')')
            PsiJavaToken:;(';')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('name')
              VAR_INIT
                PsiJavaToken:=('=')
                PREFIX_EXPRESSION
                  SWITCH_STATEMENT
                    PsiJavaToken:switch('switch')
                    PARENTHESIZED_EXPRESSION
                      PsiJavaToken:(('(')
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          PsiJavaToken:ID('myTree')
                      PsiJavaToken:)(')')
                    SWITCH_BLOCK
                      PsiJavaToken:{('{')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        CALL_EXPRESSION
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              PsiJavaToken:ID('Leaf')
                          PsiJavaToken:(('(')
                          EXPRESSION_LIST
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('s')
                          PsiJavaToken:)(')')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              PsiJavaToken:ID('s')
                          PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        CALL_EXPRESSION
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              PsiJavaToken:ID('Node')
                          PsiJavaToken:(('(')
                          EXPRESSION_LIST
                            CALL_EXPRESSION
                              REFERENCE_EXPRESSION
                                IDENTIFIER
                                  PsiJavaToken:ID('Leaf')
                              PsiJavaToken:(('(')
                              EXPRESSION_LIST
                                REFERENCE_EXPRESSION
                                  IDENTIFIER
                                    PsiJavaToken:ID('s')
                              PsiJavaToken:)(')')
                            PsiJavaToken:,(',')
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('_')
                          PsiJavaToken:)(')')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              PsiJavaToken:ID('s')
                          PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            PsiJavaToken:ID('_')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('none')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      PsiJavaToken:}('}')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                PsiJavaToken:ID('trace')
            PsiJavaToken:(('(')
            EXPRESSION_LIST
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('name')
            PsiJavaToken:)(')')
          PsiJavaToken:;(';')
          PsiComment(MSL_COMMENT)('// foo')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('myStructure')
              VAR_INIT
                PsiJavaToken:=('=')
                OBJECT_LITERAL
                  PsiJavaToken:{('{')
                  OBJECT_LITERAL_ELEMENT
                    IDENTIFIER
                      PsiJavaToken:ID('name')
                    PsiJavaToken::(':')
                    STRING_LITERAL_EXPRESSION
                      PsiJavaToken:OPEN_QUOTE('"')
                      PsiJavaToken:REGULAR_STRING_PART('haxe')
                      PsiJavaToken:CLOSING_QUOTE('"')
                  PsiJavaToken:,(',')
                  OBJECT_LITERAL_ELEMENT
                    IDENTIFIER
                      PsiJavaToken:ID('rating')
                    PsiJavaToken::(':')
                    STRING_LITERAL_EXPRESSION
                      PsiJavaToken:OPEN_QUOTE('"')
                      PsiJavaToken:REGULAR_STRING_PART('awesome')
                      PsiJavaToken:CLOSING_QUOTE('"')
                  PsiJavaToken:}('}')
            PsiJavaToken:;(';')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('value')
              VAR_INIT
                PsiJavaToken:=('=')
                PREFIX_EXPRESSION
                  SWITCH_STATEMENT
                    PsiJavaToken:switch('switch')
                    PARENTHESIZED_EXPRESSION
                      PsiJavaToken:(('(')
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          PsiJavaToken:ID('myStructure')
                      PsiJavaToken:)(')')
                    SWITCH_BLOCK
                      PsiJavaToken:{('{')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        OBJECT_LITERAL
                          PsiJavaToken:{('{')
                          OBJECT_LITERAL_ELEMENT
                            IDENTIFIER
                              PsiJavaToken:ID('name')
                            PsiJavaToken::(':')
                            STRING_LITERAL_EXPRESSION
                              PsiJavaToken:OPEN_QUOTE('"')
                              PsiJavaToken:REGULAR_STRING_PART('haxe')
                              PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:,(',')
                          OBJECT_LITERAL_ELEMENT
                            IDENTIFIER
                              PsiJavaToken:ID('rating')
                            PsiJavaToken::(':')
                            STRING_LITERAL_EXPRESSION
                              PsiJavaToken:OPEN_QUOTE('"')
                              PsiJavaToken:REGULAR_STRING_PART('poor')
                              PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:}('}')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          THROW_STATEMENT
                            PsiJavaToken:throw('throw')
                            LITERAL_EXPRESSION
                              PsiJavaToken:false('false')
                            PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        OBJECT_LITERAL
                          PsiJavaToken:{('{')
                          OBJECT_LITERAL_ELEMENT
                            IDENTIFIER
                              PsiJavaToken:ID('rating')
                            PsiJavaToken::(':')
                            STRING_LITERAL_EXPRESSION
                              PsiJavaToken:OPEN_QUOTE('"')
                              PsiJavaToken:REGULAR_STRING_PART('awesome')
                              PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:,(',')
                          OBJECT_LITERAL_ELEMENT
                            IDENTIFIER
                              PsiJavaToken:ID('name')
                            PsiJavaToken::(':')
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('n')
                          PsiJavaToken:}('}')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          REFERENCE_EXPRESSION
                            IDENTIFIER
                              PsiJavaToken:ID('n')
                          PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            PsiJavaToken:ID('_')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('no awesome language found')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      PsiJavaToken:}('}')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                PsiJavaToken:ID('trace')
            PsiJavaToken:(('(')
            EXPRESSION_LIST
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('value')
            PsiJavaToken:)(')')
          PsiJavaToken:;(';')
          PsiComment(MSL_COMMENT)('// haxe')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('myArray')
              VAR_INIT
                PsiJavaToken:=('=')
                ARRAY_LITERAL
                  PsiJavaToken:[('[')
                  EXPRESSION_LIST
                    LITERAL_EXPRESSION
                      PsiJavaToken:LITINT('1')
                    PsiJavaToken:,(',')
                    LITERAL_EXPRESSION
                      PsiJavaToken:LITINT('6')
                  PsiJavaToken:](']')
            PsiJavaToken:;(';')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('match')
              VAR_INIT
                PsiJavaToken:=('=')
                PREFIX_EXPRESSION
                  SWITCH_STATEMENT
                    PsiJavaToken:switch('switch')
                    PARENTHESIZED_EXPRESSION
                      PsiJavaToken:(('(')
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          PsiJavaToken:ID('myArray')
                      PsiJavaToken:)(')')
                    SWITCH_BLOCK
                      PsiJavaToken:{('{')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        ARRAY_LITERAL
                          PsiJavaToken:[('[')
                          EXPRESSION_LIST
                            LITERAL_EXPRESSION
                              PsiJavaToken:LITINT('2')
                            PsiJavaToken:,(',')
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('_')
                          PsiJavaToken:](']')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('0')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        ARRAY_LITERAL
                          PsiJavaToken:[('[')
                          EXPRESSION_LIST
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('_')
                            PsiJavaToken:,(',')
                            LITERAL_EXPRESSION
                              PsiJavaToken:LITINT('6')
                          PsiJavaToken:](']')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('1')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        ARRAY_LITERAL
                          PsiJavaToken:[('[')
                          PsiJavaToken:](']')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('2')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        ARRAY_LITERAL
                          PsiJavaToken:[('[')
                          EXPRESSION_LIST
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('_')
                            PsiJavaToken:,(',')
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('_')
                            PsiJavaToken:,(',')
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('_')
                          PsiJavaToken:](']')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('3')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            PsiJavaToken:ID('_')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('4')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      PsiJavaToken:}('}')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                PsiJavaToken:ID('trace')
            PsiJavaToken:(('(')
            EXPRESSION_LIST
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('match')
            PsiJavaToken:)(')')
          PsiJavaToken:;(';')
          PsiComment(MSL_COMMENT)('// 1')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('match')
              VAR_INIT
                PsiJavaToken:=('=')
                PREFIX_EXPRESSION
                  SWITCH_STATEMENT
                    PsiJavaToken:switch('switch')
                    PARENTHESIZED_EXPRESSION
                      PsiJavaToken:(('(')
                      LITERAL_EXPRESSION
                        PsiJavaToken:LITINT('7')
                      PsiJavaToken:)(')')
                    SWITCH_BLOCK
                      PsiJavaToken:{('{')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        BITWISE_EXPRESSION
                          LITERAL_EXPRESSION
                            PsiJavaToken:LITINT('4')
                          BIT_OPERATION
                            PsiJavaToken:|('|')
                          LITERAL_EXPRESSION
                            PsiJavaToken:LITINT('1')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('0')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        BITWISE_EXPRESSION
                          LITERAL_EXPRESSION
                            PsiJavaToken:LITINT('6')
                          BIT_OPERATION
                            PsiJavaToken:|('|')
                          LITERAL_EXPRESSION
                            PsiJavaToken:LITINT('7')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('1')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            PsiJavaToken:ID('_')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('2')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      PsiJavaToken:}('}')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                PsiJavaToken:ID('trace')
            PsiJavaToken:(('(')
            EXPRESSION_LIST
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('match')
            PsiJavaToken:)(')')
          PsiJavaToken:;(';')
          PsiComment(MSL_COMMENT)('// 1')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('myArray')
              VAR_INIT
                PsiJavaToken:=('=')
                ARRAY_LITERAL
                  PsiJavaToken:[('[')
                  EXPRESSION_LIST
                    LITERAL_EXPRESSION
                      PsiJavaToken:LITINT('7')
                    PsiJavaToken:,(',')
                    LITERAL_EXPRESSION
                      PsiJavaToken:LITINT('6')
                  PsiJavaToken:](']')
            PsiJavaToken:;(';')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('s')
              VAR_INIT
                PsiJavaToken:=('=')
                PREFIX_EXPRESSION
                  SWITCH_STATEMENT
                    PsiJavaToken:switch('switch')
                    PARENTHESIZED_EXPRESSION
                      PsiJavaToken:(('(')
                      REFERENCE_EXPRESSION
                        IDENTIFIER
                          PsiJavaToken:ID('myArray')
                      PsiJavaToken:)(')')
                    SWITCH_BLOCK
                      PsiJavaToken:{('{')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        SWITCH_CASE_EXPRESSION
                          ARRAY_LITERAL
                            PsiJavaToken:[('[')
                            EXPRESSION_LIST
                              REFERENCE_EXPRESSION
                                IDENTIFIER
                                  PsiJavaToken:ID('a')
                              PsiJavaToken:,(',')
                              REFERENCE_EXPRESSION
                                IDENTIFIER
                                  PsiJavaToken:ID('b')
                            PsiJavaToken:](']')
                          PsiJavaToken:if('if')
                          PsiJavaToken:(('(')
                          COMPARE_EXPRESSION
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('b')
                            COMPARE_OPERATION
                              PsiJavaToken:>('>')
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('a')
                          PsiJavaToken:)(')')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          ADDITIVE_EXPRESSION
                            ADDITIVE_EXPRESSION
                              REFERENCE_EXPRESSION
                                IDENTIFIER
                                  PsiJavaToken:ID('b')
                              PsiJavaToken:+('+')
                              STRING_LITERAL_EXPRESSION
                                PsiJavaToken:OPEN_QUOTE('"')
                                PsiJavaToken:REGULAR_STRING_PART('>')
                                PsiJavaToken:CLOSING_QUOTE('"')
                            PsiJavaToken:+('+')
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('a')
                          PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        ARRAY_LITERAL
                          PsiJavaToken:[('[')
                          EXPRESSION_LIST
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('a')
                            PsiJavaToken:,(',')
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('b')
                          PsiJavaToken:](']')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          ADDITIVE_EXPRESSION
                            ADDITIVE_EXPRESSION
                              REFERENCE_EXPRESSION
                                IDENTIFIER
                                  PsiJavaToken:ID('b')
                              PsiJavaToken:+('+')
                              STRING_LITERAL_EXPRESSION
                                PsiJavaToken:OPEN_QUOTE('"')
                                PsiJavaToken:REGULAR_STRING_PART('<=')
                                PsiJavaToken:CLOSING_QUOTE('"')
                            PsiJavaToken:+('+')
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('a')
                          PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        REFERENCE_EXPRESSION
                          IDENTIFIER
                            PsiJavaToken:ID('_')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('found something else')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      PsiJavaToken:}('}')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                PsiJavaToken:ID('trace')
            PsiJavaToken:(('(')
            EXPRESSION_LIST
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('s')
            PsiJavaToken:)(')')
          PsiJavaToken:;(';')
          PsiComment(MSL_COMMENT)('// 6<=7')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('s')
              VAR_INIT
                PsiJavaToken:=('=')
                PREFIX_EXPRESSION
                  SWITCH_STATEMENT
                    PsiJavaToken:switch('switch')
                    ARRAY_LITERAL
                      PsiJavaToken:[('[')
                      EXPRESSION_LIST
                        LITERAL_EXPRESSION
                          PsiJavaToken:LITINT('1')
                        PsiJavaToken:,(',')
                        LITERAL_EXPRESSION
                          PsiJavaToken:false('false')
                        PsiJavaToken:,(',')
                        STRING_LITERAL_EXPRESSION
                          PsiJavaToken:OPEN_QUOTE('"')
                          PsiJavaToken:REGULAR_STRING_PART('foo')
                          PsiJavaToken:CLOSING_QUOTE('"')
                      PsiJavaToken:](']')
                    SWITCH_BLOCK
                      PsiJavaToken:{('{')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        ARRAY_LITERAL
                          PsiJavaToken:[('[')
                          EXPRESSION_LIST
                            LITERAL_EXPRESSION
                              PsiJavaToken:LITINT('1')
                            PsiJavaToken:,(',')
                            LITERAL_EXPRESSION
                              PsiJavaToken:false('false')
                            PsiJavaToken:,(',')
                            STRING_LITERAL_EXPRESSION
                              PsiJavaToken:OPEN_QUOTE('"')
                              PsiJavaToken:REGULAR_STRING_PART('bar')
                              PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:](']')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('0')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        ARRAY_LITERAL
                          PsiJavaToken:[('[')
                          EXPRESSION_LIST
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('_')
                            PsiJavaToken:,(',')
                            LITERAL_EXPRESSION
                              PsiJavaToken:true('true')
                            PsiJavaToken:,(',')
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('_')
                          PsiJavaToken:](']')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('1')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      SWITCH_CASE
                        PsiJavaToken:case('case')
                        ARRAY_LITERAL
                          PsiJavaToken:[('[')
                          EXPRESSION_LIST
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('_')
                            PsiJavaToken:,(',')
                            LITERAL_EXPRESSION
                              PsiJavaToken:false('false')
                            PsiJavaToken:,(',')
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('_')
                          PsiJavaToken:](']')
                        PsiJavaToken::(':')
                        SWITCH_CASE_BLOCK
                          STRING_LITERAL_EXPRESSION
                            PsiJavaToken:OPEN_QUOTE('"')
                            PsiJavaToken:REGULAR_STRING_PART('2')
                            PsiJavaToken:CLOSING_QUOTE('"')
                          PsiJavaToken:;(';')
                      PsiJavaToken:}('}')
          CALL_EXPRESSION
            REFERENCE_EXPRESSION
              IDENTIFIER
                PsiJavaToken:ID('trace')
            PsiJavaToken:(('(')
            EXPRESSION_LIST
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('s')
            PsiJavaToken:)(')')
          PsiJavaToken:;(';')
          PsiComment(MSL_COMMENT)('// 2')
          PsiJavaToken:}('}')
    PsiJavaToken:}('}')
  ABSTRACT_CLASS_DECLARATION
    PsiModifierList:@:coreType
      MACRO_CLASS
        CUSTOM_META
          PsiJavaToken:MACRO_ID('@:coreType')
    PsiJavaToken:abstract('abstract')
    COMPONENT_NAME
      IDENTIFIER
        PsiJavaToken:ID('Kilometer')
    IDENTIFIER
      PsiJavaToken:ID('from')
    TYPE
      REFERENCE_EXPRESSION
        IDENTIFIER
          PsiJavaToken:ID('Int')
    PsiJavaToken:{('{')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        PsiJavaToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('foo')
        PsiJavaToken:(('(')
        PARAMETER_LIST
          <empty list>
        PsiJavaToken:)(')')
        BLOCK_STATEMENT
          PsiJavaToken:{('{')
          PsiJavaToken:}('}')
    PsiJavaToken:}('}')
  CLASS_DECLARATION
    PsiJavaToken:class('class')
    COMPONENT_NAME
      IDENTIFIER
        PsiJavaToken:ID('Main')
    PsiJavaToken:{('{')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        DECLARATION_ATTRIBUTE
          PsiJavaToken:static('static')
        PsiJavaToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('main')
        PsiJavaToken:(('(')
        PARAMETER_LIST
          <empty list>
        PsiJavaToken:)(')')
        BLOCK_STATEMENT
          PsiJavaToken:{('{')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('km')
              TYPE_TAG
                PsiJavaToken::(':')
                TYPE_OR_ANONYMOUS
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        PsiJavaToken:ID('Kilometer')
              VAR_INIT
                PsiJavaToken:=('=')
                LITERAL_EXPRESSION
                  PsiJavaToken:LITINT('1')
            PsiJavaToken:;(';')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('n')
              TYPE_TAG
                PsiJavaToken::(':')
                TYPE_OR_ANONYMOUS
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        PsiJavaToken:ID('Int')
              VAR_INIT
                PsiJavaToken:=('=')
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('km')
            PsiJavaToken:;(';')
          PsiComment(MSL_COMMENT)('// Kilometer should be Int')
          PsiJavaToken:}('}')
    PsiJavaToken:}('}')
  ABSTRACT_CLASS_DECLARATION
    PsiJavaToken:abstract('abstract')
    COMPONENT_NAME
      IDENTIFIER
        PsiJavaToken:ID('Void')
    PsiJavaToken:{('{')
    CLASS_BODY
      <empty list>
    PsiJavaToken:}('}')
  PsiComment(MSL_COMMENT)('// value type with no relations')
  ABSTRACT_CLASS_DECLARATION
    PsiJavaToken:abstract('abstract')
    COMPONENT_NAME
      IDENTIFIER
        PsiJavaToken:ID('Int')
    IDENTIFIER
      PsiJavaToken:ID('to')
    TYPE
      REFERENCE_EXPRESSION
        IDENTIFIER
          PsiJavaToken:ID('Float')
    PsiJavaToken:{('{')
    CLASS_BODY
      <empty list>
    PsiJavaToken:}('}')
  PsiComment(MSL_COMMENT)('// value type which implicit casts to Float')
  ABSTRACT_CLASS_DECLARATION
    PsiJavaToken:abstract('abstract')
    COMPONENT_NAME
      IDENTIFIER
        PsiJavaToken:ID('UInt')
    IDENTIFIER
      PsiJavaToken:ID('to')
    TYPE
      REFERENCE_EXPRESSION
        IDENTIFIER
          PsiJavaToken:ID('Int')
    IDENTIFIER
      PsiJavaToken:ID('from')
    TYPE
      REFERENCE_EXPRESSION
        IDENTIFIER
          PsiJavaToken:ID('Int')
    PsiJavaToken:{('{')
    CLASS_BODY
      <empty list>
    PsiJavaToken:}('}')
  PsiComment(MSL_COMMENT)('// value types which auto-casts to and from Int')
  ABSTRACT_CLASS_DECLARATION
    PsiJavaToken:abstract('abstract')
    COMPONENT_NAME
      IDENTIFIER
        PsiJavaToken:ID('EnumFlags')
    GENERIC_PARAM
      PsiJavaToken:<('<')
      GENERIC_LIST_PART
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('T')
        PsiJavaToken::(':')
        TYPE_LIST_PART
          TYPE_OR_ANONYMOUS
            TYPE
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('EnumValue')
      PsiJavaToken:>('>')
    PsiJavaToken:(('(')
    TYPE_OR_ANONYMOUS
      TYPE
        REFERENCE_EXPRESSION
          IDENTIFIER
            PsiJavaToken:ID('Int')
    PsiJavaToken:)(')')
    PsiJavaToken:{('{')
    CLASS_BODY
      <empty list>
    PsiJavaToken:}('}')
  PsiComment(MSL_COMMENT)('// opaque type based on Int')
  ABSTRACT_CLASS_DECLARATION
    PsiJavaToken:abstract('abstract')
    COMPONENT_NAME
      IDENTIFIER
        PsiJavaToken:ID('Vector')
    GENERIC_PARAM
      PsiJavaToken:<('<')
      GENERIC_LIST_PART
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('T')
      PsiJavaToken:>('>')
    PsiJavaToken:(('(')
    TYPE_OR_ANONYMOUS
      TYPE
        REFERENCE_EXPRESSION
          IDENTIFIER
            PsiJavaToken:ID('VectorData')
        TYPE_PARAM
          PsiJavaToken:<('<')
          TYPE_LIST
            TYPE_LIST_PART
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('T')
          PsiJavaToken:>('>')
    PsiJavaToken:)(')')
    PsiJavaToken:{('{')
    CLASS_BODY
      <empty list>
    PsiJavaToken:}('}')
  PsiComment(MSL_COMMENT)('// opaque type based on VectorData<T>')
  ABSTRACT_CLASS_DECLARATION
    PsiJavaToken:abstract('abstract')
    COMPONENT_NAME
      IDENTIFIER
        PsiJavaToken:ID('StringSplitter')
    PsiJavaToken:(('(')
    TYPE_OR_ANONYMOUS
      TYPE
        REFERENCE_EXPRESSION
          IDENTIFIER
            PsiJavaToken:ID('Array')
        TYPE_PARAM
          PsiJavaToken:<('<')
          TYPE_LIST
            TYPE_LIST_PART
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('String')
          PsiJavaToken:>('>')
    PsiJavaToken:)(')')
    PsiJavaToken:{('{')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        DECLARATION_ATTRIBUTE
          PsiJavaToken:inline('inline')
        PsiJavaToken:function('function')
        PsiJavaToken:new('new')
        PsiJavaToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                PsiJavaToken:ID('a')
            TYPE_TAG
              PsiJavaToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('Array')
                  TYPE_PARAM
                    PsiJavaToken:<('<')
                    TYPE_LIST
                      TYPE_LIST_PART
                        TYPE_OR_ANONYMOUS
                          TYPE
                            REFERENCE_EXPRESSION
                              IDENTIFIER
                                PsiJavaToken:ID('String')
                    PsiJavaToken:>('>')
        PsiJavaToken:)(')')
        ASSIGN_EXPRESSION
          THIS_EXPRESSION
            PsiJavaToken:this('this')
          ASSIGN_OPERATION
            PsiJavaToken:=('=')
          REFERENCE_EXPRESSION
            IDENTIFIER
              PsiJavaToken:ID('a')
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        CUSTOM_META
          PsiJavaToken:MACRO_ID('@:from')
        DECLARATION_ATTRIBUTE
          PsiJavaToken:static('static')
        DECLARATION_ATTRIBUTE
          ACCESS
            PsiJavaToken:public('public')
        DECLARATION_ATTRIBUTE
          PsiJavaToken:inline('inline')
        PsiJavaToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('fromString')
        PsiJavaToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                PsiJavaToken:ID('s')
            TYPE_TAG
              PsiJavaToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('String')
        PsiJavaToken:)(')')
        BLOCK_STATEMENT
          PsiJavaToken:{('{')
          RETURN_STATEMENT
            PsiJavaToken:return('return')
            NEW_EXPRESSION
              PsiJavaToken:new('new')
              TYPE
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('StringSplitter')
              PsiJavaToken:(('(')
              CALL_EXPRESSION
                REFERENCE_EXPRESSION
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('s')
                  PsiJavaToken:.('.')
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('split')
                PsiJavaToken:(('(')
                EXPRESSION_LIST
                  STRING_LITERAL_EXPRESSION
                    PsiJavaToken:OPEN_QUOTE('"')
                    PsiJavaToken:CLOSING_QUOTE('"')
                PsiJavaToken:)(')')
              PsiJavaToken:)(')')
            PsiJavaToken:;(';')
          PsiJavaToken:}('}')
    PsiJavaToken:}('}')
  ABSTRACT_CLASS_DECLARATION
    PsiJavaToken:abstract('abstract')
    COMPONENT_NAME
      IDENTIFIER
        PsiJavaToken:ID('MyInt')
    PsiJavaToken:(('(')
    TYPE_OR_ANONYMOUS
      TYPE
        REFERENCE_EXPRESSION
          IDENTIFIER
            PsiJavaToken:ID('Int')
    PsiJavaToken:)(')')
    IDENTIFIER
      PsiJavaToken:ID('from')
    TYPE
      REFERENCE_EXPRESSION
        IDENTIFIER
          PsiJavaToken:ID('Int')
    IDENTIFIER
      PsiJavaToken:ID('to')
    TYPE
      REFERENCE_EXPRESSION
        IDENTIFIER
          PsiJavaToken:ID('Int')
    PsiJavaToken:{('{')
    PsiComment(MSL_COMMENT)('// MyInt + MyInt can be used as is, and returns a MyInt')
    CLASS_BODY
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        CUSTOM_META
          PsiJavaToken:MACRO_ID('@:op')
          PsiJavaToken:(('(')
          EXPRESSION_LIST
            ADDITIVE_EXPRESSION
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('A')
              PsiJavaToken:+('+')
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('B')
          PsiJavaToken:)(')')
        DECLARATION_ATTRIBUTE
          PsiJavaToken:static('static')
        DECLARATION_ATTRIBUTE
          ACCESS
            PsiJavaToken:public('public')
        PsiJavaToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('add')
        PsiJavaToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                PsiJavaToken:ID('lhs')
            TYPE_TAG
              PsiJavaToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('MyInt')
          PsiJavaToken:,(',')
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                PsiJavaToken:ID('rhs')
            TYPE_TAG
              PsiJavaToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('MyInt')
        PsiJavaToken:)(')')
        TYPE_TAG
          PsiJavaToken::(':')
          TYPE_OR_ANONYMOUS
            TYPE
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('MyInt')
        BLOCK_STATEMENT
          PsiJavaToken:{('{')
          PsiJavaToken:}('}')
      FUNCTION_DECLARATION_WITH_ATTRIBUTES
        CUSTOM_META
          PsiJavaToken:MACRO_ID('@:commutative')
        CUSTOM_META
          PsiJavaToken:MACRO_ID('@:op')
          PsiJavaToken:(('(')
          EXPRESSION_LIST
            MULTIPLICATIVE_EXPRESSION
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('A')
              PsiJavaToken:*('*')
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('B')
          PsiJavaToken:)(')')
        DECLARATION_ATTRIBUTE
          PsiJavaToken:static('static')
        DECLARATION_ATTRIBUTE
          ACCESS
            PsiJavaToken:public('public')
        PsiJavaToken:function('function')
        COMPONENT_NAME
          IDENTIFIER
            PsiJavaToken:ID('repeat')
        PsiJavaToken:(('(')
        PARAMETER_LIST
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                PsiJavaToken:ID('lhs')
            TYPE_TAG
              PsiJavaToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('MyInt')
          PsiJavaToken:,(',')
          PARAMETER
            COMPONENT_NAME
              IDENTIFIER
                PsiJavaToken:ID('rhs')
            TYPE_TAG
              PsiJavaToken::(':')
              TYPE_OR_ANONYMOUS
                TYPE
                  REFERENCE_EXPRESSION
                    IDENTIFIER
                      PsiJavaToken:ID('String')
        PsiJavaToken:)(')')
        TYPE_TAG
          PsiJavaToken::(':')
          TYPE_OR_ANONYMOUS
            TYPE
              REFERENCE_EXPRESSION
                IDENTIFIER
                  PsiJavaToken:ID('String')
        BLOCK_STATEMENT
          PsiJavaToken:{('{')
          LOCAL_VAR_DECLARATION
            PsiJavaToken:var('var')
            LOCAL_VAR_DECLARATION_PART
              COMPONENT_NAME
                IDENTIFIER
                  PsiJavaToken:ID('s')
              TYPE_TAG
                PsiJavaToken::(':')
                TYPE_OR_ANONYMOUS
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        PsiJavaToken:ID('StringBuf')
              VAR_INIT
                PsiJavaToken:=('=')
                NEW_EXPRESSION
                  PsiJavaToken:new('new')
                  TYPE
                    REFERENCE_EXPRESSION
                      IDENTIFIER
                        PsiJavaToken:ID('StringBuf')
                  PsiJavaToken:(('(')
                  PsiJavaToken:)(')')
            PsiJavaToken:;(';')
          FOR_STATEMENT
            PsiJavaToken:for('for')
            PsiJavaToken:(('(')
            COMPONENT_NAME
              IDENTIFIER
                PsiJavaToken:ID('i')
            PsiJavaToken:in('in')
            ITERABLE
              ITERATOR_EXPRESSION
                LITERAL_EXPRESSION
                  PsiJavaToken:LITINT('0')
                PsiJavaToken:...('...')
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('lhs')
            PsiJavaToken:)(')')
            CALL_EXPRESSION
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('s')
                PsiJavaToken:.('.')
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('add')
              PsiJavaToken:(('(')
              EXPRESSION_LIST
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('rhs')
              PsiJavaToken:)(')')
            PsiJavaToken:;(';')
          RETURN_STATEMENT
            PsiJavaToken:return('return')
            CALL_EXPRESSION
              REFERENCE_EXPRESSION
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('s')
                PsiJavaToken:.('.')
                REFERENCE_EXPRESSION
                  IDENTIFIER
                    PsiJavaToken:ID('toString')
              PsiJavaToken:(('(')
              PsiJavaToken:)(')')
            PsiJavaToken:;(';')
          PsiJavaToken:}('}')
    PsiJavaToken:}('}')